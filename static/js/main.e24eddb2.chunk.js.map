{"version":3,"sources":["components/LeftSection/GroupsFilter.jsx","components/LeftSection/ContactList.jsx","components/LeftSection/EditContact.jsx","components/LeftSection/SearchContact.jsx","components/LeftSection/ModalGroup.jsx","components/LeftSection/AddGroup.jsx","assets/images/02.gif","components/RightSection/ShowContact.jsx","components/LeftSection/AddContact.jsx","components/LeftSection/RemoveContact.jsx","assets/images/vitaliy.jpg","assets/images/butko.jpg","assets/images/gnatko.jpg","components/App.jsx","index.js"],"names":["DropDown","options","activeGroup","onGroupChange","activeItem","find","option","Dropdown","className","Toggle","variant","id","Menu","map","Item","as","active","onClick","ContactList","contacts","activeContactId","onContactChange","ListGroup","contact","name","EditContact","activeContact","onUpdateContact","groups","useState","show","setShow","fullName","setFullName","email","setEmail","phone","setPhone","group","setGroup","image","setImage","setId","useEffect","Button","Modal","contentClassName","dialogClassName","onHide","Header","closeButton","Title","Body","type","placeholder","onChange","e","target","value","htmlFor","reader","FileReader","onload","readyState","result","readAsDataURL","files","Footer","SearchContact","onSearchChange","searchValue","ModalGroup","handleClose","handleInputChange","onSubmitText","groupName","InputGroup","FormControl","aria-describedby","AddGroup","onAddGroup","setGroupName","trim","length","ShowContact","src","alt","photo","AddContact","onAddContact","setContacts","raw","localStorage","getItem","JSON","parse","setItem","stringify","RemoveContact","onDeleted","App","setGroups","setActiveGroup","search","setSearch","undefined","setActiveContact","photo2","photo3","filterContacts","filter","toLowerCase","includes","GroupsFilter","update","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24eddb2.chunk.js","sourcesContent":["import Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nconst DropDown = ({options, activeGroup, onGroupChange}) => {\r\n  \r\n  const activeItem = options.find(option => option === activeGroup) || '';\r\n\r\n  return (\r\n    <Dropdown className=\"dropdown\">\r\n      <Dropdown.Toggle className=\"dropdown-toggle-text\" variant=\"outline-success\" id=\"dropdown-basic\">\r\n        {activeItem}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu className=\"dropdown-menu\">\r\n        {options.map(option => {\r\n          return (\r\n            <Dropdown.Item \r\n              className=\"dropdown-menu-item\"\r\n              key={option} \r\n              as=\"button\" \r\n              active={option === activeGroup}\r\n              onClick={() => onGroupChange(option)}>\r\n              {option}\r\n            </Dropdown.Item>\r\n          )\r\n        })}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  )\r\n}  \r\n\r\nexport default DropDown;","import ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst ContactList = ({ contacts, activeContactId, onContactChange }) => {\r\n  return (\r\n    <div className=\"ls_contact_list\">\r\n      <ListGroup as=\"ul\" variant=\"flush\">\r\n        {contacts.map(contact => {\r\n          return (\r\n            <ListGroup.Item \r\n              className={contact.id === activeContactId ? 'active list-item' : 'list-item'} \r\n              key={contact.id} as=\"li\"\r\n              onClick={() => onContactChange(contact)}\r\n              contact={contact}\r\n              >{contact.name} \r\n            </ListGroup.Item>\r\n          )\r\n        })}\r\n      </ListGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactList","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nconst EditContact = ({ activeContact, onUpdateContact, groups }) => {\r\n  const [show, setShow] = useState(false)\r\n  const [fullName, setFullName] = useState(activeContact.name)\r\n  const [email, setEmail] = useState(activeContact.email)\r\n  const [phone, setPhone] = useState(activeContact.phone)\r\n  const [group, setGroup] = useState(activeContact.group)\r\n  const [image, setImage] = useState(activeContact.image);\r\n  const [id, setId] = useState(activeContact.id)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true);\r\n  const handleFullName = (e) => setFullName(e.target.value)\r\n  const handleEmail = (e) => setEmail(e.target.value)\r\n  const handlePhone = (e) => setPhone(e.target.value)\r\n  const handleGroup = (e) => setGroup(e.target.value)\r\n  const handleImage = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setImage(reader.result)\r\n      }\r\n    }\r\n    reader.readAsDataURL(e.target.files[0])\r\n  }\r\n  const onContactUpdate = () => {\r\n    const update = {\r\n      name: fullName,\r\n      email,\r\n      phone,\r\n      group,\r\n      image,\r\n      id,\r\n    }\r\n    onUpdateContact(update);\r\n    setShow(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFullName(activeContact.name)\r\n    setEmail(activeContact.email)\r\n    setPhone(activeContact.phone)\r\n    setGroup(activeContact.group)\r\n    setImage(activeContact.image)\r\n    setId(activeContact.id)\r\n\r\n  }, [activeContact]);\r\n\r\n  return (\r\n    <>\r\n      <Button \r\n        className=\"foot_buttons\"  \r\n        variant=\"outline-primary\" \r\n        onClick={handleShow}>\r\n        Edit\r\n      </Button>\r\n      <Modal \r\n        contentClassName={'modal-content-contact'} \r\n        dialogClassName={'modal-dialog-contact'} \r\n        show={show} \r\n        onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Contact</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <div className=\"mb-3\">\r\n            <label><span><i className=\"fa fa-pencil-alt\"></i></span> Full Name:</label>\r\n            <input \r\n              type=\"text\" \r\n              className=\"form-control\"  \r\n              placeholder=\"Full Name\" \r\n              onChange={handleFullName} \r\n              value={fullName}/>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label><span><i className=\"fas fa-envelope\"></i></span> Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              className=\"form-control\"  \r\n              placeholder=\"Email\"\r\n              onChange={handleEmail}\r\n              value={email}/>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"phone\"><span><i className=\"fas fa-phone\"></i></span> Phone:</label>\r\n            <input \r\n              type=\"tel\" \r\n              name=\"phone\" \r\n              className=\"form-control\"  \r\n              placeholder=\"+380\" \r\n              onChange={handlePhone}\r\n              value={phone}/>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"image\"><span><i className=\"fas fa-images\"></i></span> Image:</label>\r\n            <input \r\n              type=\"file\" \r\n              name=\"image\" \r\n              className=\"form-control\"  \r\n              onChange={handleImage}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"\">\r\n            <label><span><i className=\"fas fa-users\"></i></span> Group:</label>\r\n            <select value={group} onChange={handleGroup}> \r\n              {groups.map(group => <option value={group} key={group}>{group}</option>)}\r\n            </select>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button \r\n            className=\"add-group add-group-btn\" \r\n            variant=\"primary\" \r\n            onClick={onContactUpdate}>\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditContact;","export default function SearchContact({onSearchChange, searchValue}) {\r\n\r\n  const onSearch = (e) => onSearchChange(e.target.value);\r\n\r\n  return (\r\n    <div className=\"ls_search\">\r\n      <input \r\n        className=\"form-control\" \r\n        type=\"search\" \r\n        name=\"search\" \r\n        placeholder=\"Search your contacts...\"\r\n        value={searchValue}\r\n        onChange={onSearch}/>\r\n    </div>\r\n  )\r\n}\r\n","import Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst ModalGroup = ({handleClose, handleInputChange, onSubmitText, show, groupName}) => {\r\n  return (\r\n      <Modal \r\n        dialogClassName={'modal-dialog-group'}  \r\n        contentClassName={'modal-content-group'}\r\n        show={show} \r\n        onHide={handleClose}>\r\n      <Modal.Header className=\"modal-group-header\" closeButton></Modal.Header>\r\n      <Modal.Body className=\"modal-group-body\"> \r\n        <Modal.Title className=\"modal-group-title\">Please, enter the name of your group!</Modal.Title>\r\n        <InputGroup>\r\n          <FormControl \r\n            className=\"modal-input\"\r\n            aria-describedby=\"basic-addon1\" \r\n            placeholder=\"Write the group\" \r\n            value={groupName} \r\n            onChange={handleInputChange}/>\r\n        </InputGroup>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"modal-group-footer\">\r\n        <Button className=\"modal-footer-btn\" variant=\"outline-success\" onClick={handleClose}>\r\n          Close\r\n        </Button>\r\n        <Button className=\"modal-footer-btn\" variant=\"outline-success\" onClick={onSubmitText}>\r\n          Save\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalGroup;","import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ModalGroup from './ModalGroup';\r\n\r\nconst AddGroup = ({ onAddGroup }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [groupName, setGroupName] = useState('');\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleInputChange = (e) => setGroupName(e.target.value);\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    setGroupName('')\r\n  }\r\n  const onSubmitText = () => {\r\n    if (groupName.trim().length === 0) return\r\n    onAddGroup(groupName)\r\n    setShow(false)\r\n    setGroupName('')\r\n  }\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"add-group\">\r\n          <Button \r\n            className=\"add-group-btn\" \r\n            variant=\"outline-success\" \r\n            onClick={handleShow}>\r\n            Add Group\r\n          </Button>\r\n        </div>\r\n        <ModalGroup \r\n          onSubmitText={onSubmitText}\r\n          handleClose={handleClose}\r\n          handleInputChange={handleInputChange}\r\n          show={show}\r\n          groupName={groupName}/>\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\nexport default AddGroup;","export default __webpack_public_path__ + \"static/media/02.3694edee.gif\";","import photo from '../../assets/images/02.gif'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ShowContact = ({ activeContact = {} }) => {\r\n  return (\r\n    <div className=\"rs_informer\">\r\n      <h1 className=\"rs_title\">Contacts Book</h1>\r\n      <div className=\"rs_interface\">\r\n        <div className=\"rs_photo\">{activeContact.image \r\n          ? <img src={activeContact.image} alt=\"logo\"/> \r\n          : <img src={photo} alt=\"logo\" />}\r\n        </div>\r\n          <div className=\"rs_designation\">\r\n            <button className=\"rs_designation_icon\"><i className=\"fa fa-pencil-alt\"></i></button>\r\n            <span className=\"rs_designation_name\">{activeContact.name}</span>\r\n          </div>\r\n      </div>\r\n    <div className=\"rs_contact_info\">\r\n      <p>\r\n        <span className=\"contact_icon\"><i className=\"fas fa-envelope\"></i></span>\r\n        <span className=\"contact_title\">Email:</span>\r\n        <span className=\"contact_information\">{activeContact.email}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"contact_icon\"><i className=\"fas fa-phone\"></i></span>\r\n        <span className=\"contact_title\">Phone:</span>\r\n        <span className=\"contact_information\">{activeContact.phone}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"contact_icon\"><i className=\"fas fa-users\"></i></span>\r\n        <span className=\"contact_title\">Group:</span>\r\n        <span className=\"contact_information\">{activeContact.group}</span>\r\n      </p>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nShowContact.propTypes = {\r\n  activeContact:  PropTypes.shape({\r\n    phone: PropTypes.string.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    group: PropTypes.string.isRequired\r\n  })\r\n}\r\n\r\nexport default ShowContact;","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nlet id = 100\r\n\r\nconst AddContact = ({ groups, onAddContact, contacts, setContacts }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [fullName, setFullName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [image, setImage] = useState(null);\r\n  const [group, setGroup] = useState(groups[0]);\r\n  \r\n  const handleShow = () => setShow(true);\r\n  const handleFullName = (e) => setFullName(e.target.value)\r\n  const handleEmail = (e) => setEmail(e.target.value)\r\n  const handlePhone = (e) => setPhone(e.target.value)\r\n  const handleGroup = (e) => setGroup(e.target.value)\r\n  const handleImage = (e) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setImage(reader.result)\r\n      }\r\n    }\r\n    reader.readAsDataURL(e.target.files[0])\r\n  }\r\n\r\n  useEffect(() => {\r\n    const raw = localStorage.getItem('contacts') || []\r\n    setContacts(JSON.parse(raw))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts))\r\n  }, [contacts]);\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    setFullName('')\r\n    setEmail('')\r\n    setPhone('')\r\n    setImage(null)\r\n    setGroup(groups[0])\r\n  } \r\n\r\n  const addContact = () => {\r\n    const contact = {\r\n      name: fullName,\r\n      email,\r\n      phone,\r\n      group,\r\n      image,\r\n      id: id++,\r\n    }\r\n    \r\n    if (fullName.trim().length === 0) return\r\n    if (email.trim().length === 0) return\r\n    if (phone.trim().length === 0) return\r\n    onAddContact(contact)\r\n    setShow(false)\r\n    setFullName('')\r\n    setEmail('')\r\n    setPhone('')\r\n    setGroup(groups[0])\r\n  }    \r\n  return (\r\n    <>\r\n      <Button \r\n        className=\"foot_buttons\"  \r\n        variant=\"outline-success\" \r\n        onClick={handleShow}>\r\n        Add Contact\r\n      </Button>\r\n      <Modal \r\n        contentClassName={'modal-content-contact'} \r\n        dialogClassName={'modal-dialog-contact'} \r\n        show={show} \r\n        onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"fw-bold\">New Contact</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body >\r\n          <div className=\"mb-3\">\r\n            <label><span><i className=\"fa fa-pencil-alt\"></i></span> Full Name:</label>\r\n            <input \r\n              type=\"text\" \r\n              className=\"form-control\"  \r\n              placeholder=\"Full Name\" \r\n              onChange={handleFullName} \r\n              value={fullName}/>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label><span><i className=\"fas fa-envelope\"></i></span> Email:</label>\r\n            <input \r\n              type=\"email\" \r\n              className=\"form-control\"  \r\n              placeholder=\"Email\"\r\n              onChange={handleEmail}\r\n              value={email}/>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"phone\"><span><i className=\"fas fa-phone\"></i></span> Phone:</label>\r\n            <input \r\n              type=\"tel\" \r\n              name=\"phone\" \r\n              className=\"form-control\"  \r\n              placeholder=\"+380\" \r\n              onChange={handlePhone}\r\n              value={phone}/>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"image\"><span><i className=\"fas fa-images\"></i></span> Image:</label>\r\n            <input \r\n              type=\"file\" \r\n              name=\"image\" \r\n              className=\"form-control\"  \r\n              onChange={handleImage}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"\">\r\n            <label><span><i className=\"fas fa-users\"></i></span> Group:</label>\r\n            <select value={group} onChange={handleGroup}>\r\n              {groups.map(group => <option value={group} key={group}>{group}</option>)}\r\n            </select>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button \r\n            className=\"add-group add-group-btn\" \r\n            variant=\"primary\" \r\n            onClick={addContact}>\r\n            Create\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddContact;","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nconst RemoveContact = ({ onDeleted, activeContact }) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const onRemove = () => {\r\n    setShow(false)\r\n    onDeleted(activeContact.id)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button \r\n        className=\"foot_buttons\" \r\n        variant=\"outline-danger\" \r\n        onClick={handleShow}>\r\n        Remove\r\n      </Button>\r\n  \r\n      <Modal \r\n        contentClassName=\"modal-content-remove\" \r\n        dialogClassName=\"modal-dialog-remove\"\r\n        show={show} \r\n        onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Remove Contact ?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Do you want to delete <span className=\"remove-name\">{activeContact.name}</span> contact ?\r\n        </Modal.Body>\r\n        <Modal.Footer className=\"d-flex justify-content-center\">\r\n          <Button variant=\"outline-secondary\" className=\"fw-bold\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"outline-danger\" className=\"fw-bold\" onClick={onRemove}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RemoveContact;","export default __webpack_public_path__ + \"static/media/vitaliy.a8f0b92b.jpg\";","export default __webpack_public_path__ + \"static/media/butko.4aff2e19.jpg\";","export default __webpack_public_path__ + \"static/media/gnatko.ee6c6051.jpg\";","import React, { useState } from 'react';\r\nimport GroupsFilter from './LeftSection/GroupsFilter'\r\nimport ContactList from './LeftSection/ContactList';\r\nimport EditContact from './LeftSection/EditContact';\r\nimport SearchContact from './LeftSection/SearchContact';\r\nimport AddGroup from './LeftSection/AddGroup';\r\nimport ShowContact from './RightSection/ShowContact'\r\nimport AddContact from './LeftSection/AddContact';\r\nimport RemoveContact from './LeftSection/RemoveContact';\r\nimport photo3 from '../assets/images/vitaliy.jpg'\r\nimport photo2 from '../assets/images/butko.jpg'\r\nimport photo from '../assets/images/gnatko.jpg'\r\n\r\nconst App = () => {\r\n  const [groups, setGroups] = useState(['All Group','Group Family','Group Friends','Group Society','Group Anonim'])\r\n  const [activeGroup, setActiveGroup] = useState('All Group')\r\n  const [search, setSearch] = useState('')\r\n  const [activeContact, setActiveContact] = useState(undefined)\r\n  const [contacts, setContacts] = useState([\r\n    {id: 1, name: 'Ivan Stepanovich Butko', email: 'ivanbutko@.gmail.com', phone: '+38 063 578 9012', group: 'Community', image: photo2},\r\n    {id: 2, name: 'Alexander Gnatko', email: 'gnatko@.gmail.com', phone: '+38 063 434 3234', group: 'Friends',  image: photo},\r\n    {id: 3, name: 'Klitschko Vitaliy Volodymyrovych', email: 'vitaliyKlitschko@.gmail.com', phone: '+38 063 342 7121', group: 'Society', image: photo3},\r\n  ])    \r\n  \r\n  const onSearchChange = (value) => setSearch(value)\r\n  const onGroupChange = (option) => setActiveGroup(option)\r\n  const onContactChange = (contact) => setActiveContact(contact)\r\n  const onAddGroup = (groupName) => setGroups([...groups, groupName]);\r\n  const onAddContact = (contact) => setContacts([...contacts, contact]);\r\n  const onDeleted = (id) => {\r\n    setContacts(contacts.filter(contact => id !== contact.id))\r\n    setActiveContact(undefined)\r\n  };\r\n  const onUpdateContact = (update) => {\r\n    setContacts(contacts.map(contact => update.id === contact.id ? update : contact))\r\n    setActiveContact(update)\r\n  }\r\n  \r\n  const filterContacts = contacts.filter(contact => {\r\n    return contact.name.toLowerCase().includes(search.toLowerCase())});\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-sm-5 pe-0\">\r\n          <section className=\"left_section\">\r\n            <SearchContact onSearchChange={onSearchChange} searchValue={search}/>\r\n            <div className=\"ls_nead_buttons\">\r\n              <GroupsFilter options={groups} activeGroup={activeGroup} onGroupChange={onGroupChange}/>\r\n              <AddGroup onAddGroup={onAddGroup}/>\r\n            </div>\r\n            <ContactList \r\n              contacts={filterContacts} \r\n              activeContactId={activeContact?.id} \r\n              onContactChange={onContactChange}\r\n            />\r\n            <div className=\"ls_foot_buttons\">\r\n              {activeContact &&  <EditContact activeContact={activeContact} groups={groups} onUpdateContact={onUpdateContact}/>}\r\n              <AddContact \r\n                groups={groups}\r\n                onAddContact={onAddContact}\r\n                contacts={contacts}\r\n                setContacts={setContacts}\r\n              />\r\n              {activeContact && <RemoveContact onDeleted={onDeleted} activeContact={activeContact}/>}\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <div className=\"col-sm-7 ps-0\">\r\n          <section className=\"right-section\">\r\n            <ShowContact activeContact={activeContact}/>\r\n          </section>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/assets/index.scss';\nimport '../src/assets/modal.scss';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}